void checkVulnerability()
{
  // Le processus principal (appelé le processus père) crée un nouveau processus enfant
  pid_t pid = fork();

  if (pid == 0)
  {
    execve("/usr/bin/pkexec", (char *[]){NULL}, NULL);
  }

  else
  {
    int status;
    waitpid(pid, &status, 0);

    //  Lorsque le processus enfant s'est terminé, la fonction WIFEXITED() est utilisée pour vérifier si l'exécution s'est terminée
    // normalement, et la fonction WEXITSTATUS() est utilisée pour obtenir le code de sortie du processus enfant.
    if (WIFEXITED(status))
    {
      int exit_status = WEXITSTATUS(status);

      // Si le code de sortie est égal à 1, cela signifie que le système n'est pas vulnérable,
      if (exit_status == 1)
      {
        puts("Your system is not vulnerable");
        exit(0);
      }

      // Sinon, cela signifie que le système est vulnérable,
      else
      {
        puts("Your system is vulnerable\n");
      }
    }
  }
}